digraph "SysGet_HCLKFreq"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="SysGet_HCLKFreq",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Get current HCLK clock frequency."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="SystemCoreClockUpdate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d5c/system___nano103_8c.html#ae0c36a9591fe6e9c45ecb21a794f0f0f",tooltip="Updates the SystemCoreClock with current core Clock retrieved from CPU registers."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CLK_GetCPUFreq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gaa95d8368f13a4b774dffbf895c750e64",tooltip="This function get CPU frequency. The frequency unit is Hz."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="CLK_GetHCLKFreq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga27ded0f4435751be979927718884488f",tooltip="This function get HCLK frequency. The frequency unit is Hz."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="SPI_GetBusClock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dde/group___n_a_n_o103___s_p_i___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gae3a43e332cf4de4b416980eeab502d07",tooltip="Get the actual frequency of SPI bus clock. Only available in Master mode."];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="SPI_SetBusClock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dde/group___n_a_n_o103___s_p_i___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga7cee248bcbe05dfae8ab8b3bf89e8f13",tooltip="Set the SPI bus clock. Only available in Master mode."];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="SPI_Open",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dde/group___n_a_n_o103___s_p_i___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gad923655d26fb14da88c61d4ed0125c44",tooltip="This function make SPI module be ready to transfer. By default, the SPI transfer sequence is MSB firs..."];
  Node4 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="TIMER_GetModuleClock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df2/group___n_a_n_o103___t_i_m_e_r___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga56facc5683886f3ff3b273a3b5e47fcd",tooltip="This API is used to get the clock frequency of Timer."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="TIMER_Delay",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df2/group___n_a_n_o103___t_i_m_e_r___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gaaa22a542a094371ea0149be8d0fb9d4a",tooltip="This API is used to create a delay loop for u32usec micro seconds."];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="TIMER_Open",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df2/group___n_a_n_o103___t_i_m_e_r___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga234d45c63fb6f5e977dbef2294089621",tooltip="This API is used to configure timer to operate in specified mode and frequency. If timer cannot work ..."];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CLK_GetPCLK0Freq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga8e549d4e546643b1b3cf250e2e90647a",tooltip="This function get PCLK0 frequency. The frequency unit is Hz."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="I2C_GetBusClockFreq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d3c/group___n_a_n_o103___i2_c___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga722b0efc53445c3ee7bea5e2b0e48ec6",tooltip="This function returns the real bus clock of I2C module."];
  Node11 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="I2C_SetBusClockFreq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d3c/group___n_a_n_o103___i2_c___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga270c59858dcbe767fdfa7aec2247aab5",tooltip="This function sets bus frequency of I2C module."];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="I2C_Open",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d3c/group___n_a_n_o103___i2_c___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gae8701d230c114b4b73757a08d0e23309",tooltip="This function make I2C module be ready and set the wanted bus clock."];
  Node2 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CLK_GetPCLK1Freq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga764d2bd8e5cc6f81ed3896438221cb66",tooltip="This function get PCLK1 frequency. The frequency unit is Hz."];
  Node15 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CLK_SetHCLK",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gab1a48f2301aa652d88d9235674183a24",tooltip="This function set HCLK clock source and HCLK clock divider."];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CLK_SetCoreClock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d91/group___n_a_n_o103___c_l_k___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#gaeb2dbdffa8c62523cffa7116afbc3297",tooltip="This function set HCLK frequency. The frequency unit is Hz. The range of u32Hclk is 16 ~ 48 MHz."];
  Node2 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="PWM_ConfigCaptureChannel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d15/group___n_a_n_o103___p_w_m___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga2d11697fa73308d4f5ae8ee67c0c7a55",tooltip="Configure PWM capture and get the nearest unit time."];
  Node2 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="PWM_ConfigOutputChannel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d15/group___n_a_n_o103___p_w_m___e_x_p_o_r_t_e_d___f_u_n_c_t_i_o_n_s.html#ga5b5c5326f7052513e1b5eec1f71b30c8",tooltip="This function Configure PWM generator and get the nearest frequency in edge aligned auto-reload mode."];
}
